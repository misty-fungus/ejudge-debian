<% //-*- c -*-
%><%@include "includes.csp"
%><%

%><%@set getter_name = "csp_get_cnts_save_registration_form"
%><%@set ac_prefix = "SSERV_CMD_"
%><%@set err_prefix = "SSERV_ERR_"
%><%@page csp_view_cnts_save_registration_form(PageInterface *pg, FILE *log_f, FILE *out_f, struct http_request_info *phr)
%><%@include "stdvars.csp"
%><%
    snprintf(phr->content_type, sizeof(phr->content_type), "application/json; charset=%s", EJUDGE_CHARSET);

    ejintbool_t autoregister;
    const unsigned char *reg_deadline_time = NULL;
    const unsigned char *reg_deadline_date = NULL;
    unsigned char *register_email = NULL;
    unsigned char *register_url = NULL;
    unsigned char *register_subject = NULL;
    unsigned char *register_subject_en = NULL;
    unsigned char *register_email_file = NULL;
    time_t reg_deadline = 0;

    char *msg_s = NULL;
    size_t msg_z = 0;
    FILE *msg_f = open_memstream(&msg_s, &msg_z);

%><s:read var="autoregister" default="0" /><%
%><s:read var="reg_deadline_time" /><%
%><s:read var="reg_deadline_date" /><%
%><s:read var="register_email" normalize="yes" /><%
%><s:read var="register_url" normalize="yes" /><%
%><s:read var="register_subject" normalize="yes" /><%
%><s:read var="register_subject_en" normalize="yes" /><%
%><s:read var="register_email_file" normalize="yes" /><%

    if (parse_date_twopart(reg_deadline_date, reg_deadline_time, &reg_deadline) < 0) {
        fprintf(msg_f, "registration deadline is invalid<br/>");
        retval = SSERV_ERR_INV_PARAM;
    }

    if (!retval && phr->ss) {
        struct contest_desc *edited_cnts = phr->ss->edited_cnts;
        if (edited_cnts) {
            edited_cnts->autoregister = autoregister;
            edited_cnts->reg_deadline = reg_deadline;
            xfree(edited_cnts->register_email);
            edited_cnts->register_email = xstrdup2(register_email);
            edited_cnts->register_url = xstrdup2(register_url);
            edited_cnts->register_subject = xstrdup2(register_subject);
            edited_cnts->register_subject_en = xstrdup2(register_subject_en);
            edited_cnts->register_email_file = xstrdup2(register_email_file);
        }
    }

cleanup:;
    fclose(msg_f); msg_f = NULL;
%>
{
    "input" : {
        "autoregister" : "<s:v value="autoregister" json="yes" />",
        "reg_deadline_time" : "<s:v value="reg_deadline_time" json="yes" checkExpr="" />",
        "reg_deadline_date" : "<s:v value="reg_deadline_date" json="yes" checkExpr="" />",
        "register_email" : "<s:v value="register_email" json="yes" checkExpr="" />",
        "register_url" : "<s:v value="register_url" json="yes" checkExpr="" />",
        "register_subject" : "<s:v value="register_subject" json="yes" checkExpr="" />",
        "register_subject_en" : "<s:v value="register_subject_en" json="yes" checkExpr="" />",
        "register_email_file" : "<s:v value="register_email_file" json="yes" checkExpr="" />"
    },
    "retval" : <s:v value="retval" />,
    "messages" : "<s:v value="msg_s" json="yes" checkExpr="" />"
}
<%
    html_armor_free(&ab);
    xfree(register_email);
    xfree(register_url);
    xfree(register_subject);
    xfree(register_subject_en);
    xfree(register_email_file);
    xfree(msg_s);
%>
